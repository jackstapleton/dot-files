set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" general plugins
Plugin 'mileszs/ack.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'kien/ctrlp.vim'
Plugin 'wsdjeg/FlyGrep.vim'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'itchyny/lightline.vim'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'jackstapleton/vim-qkdb-syntax-gruvbox'
Plugin 'stephpy/vim-yaml'
Plugin 'nvie/vim-flake8'
" pyhton plugins
Plugin 'vim-scripts/indentpython.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-syntastic/syntastic'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"
" Leader Mappings
"
let mapleader = ";"


"
" PLUGIN SETTINGS
"

" Ack
map <leader>a :Ack!Space>

" Colour Schemes
set background=dark
colorscheme gruvbox
set t_Co=256

" GitGutter
noremap <leader>g :GitGutterToggle<cr>
inoremap <leader>g <C-O>:GitGutterToggle<cr>
nmap <leader>hn <Plug>GitGutterNextHunk
nmap <leader>hp <Plug>GitGutterPrevHunk
nmap <leader>hs <Plug>GitGutterStageHunk
nmap <leader>hu <Plug>GitGutterUndoHunk

" Fzf
map <leader>; :Files<cr>

" FlyGrep
map <leader>s :FlyGrep<cr>

" lightline config
set laststatus=2
set noshowmode
let g:lightline = {
      \ 'colorscheme': 'seoul256',
      \ }

" MultiCursor Default Mappings
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_start_word_key      = '<C-n>'
let g:multi_cursor_select_all_word_key = '<A-n>'
let g:multi_cursor_start_key           = 'g<C-n>'
let g:multi_cursor_select_all_key      = 'g<A-n>'
let g:multi_cursor_next_key            = '<C-n>'
let g:multi_cursor_prev_key            = '<C-b>'
let g:multi_cursor_skip_key            = '<C-x>'
let g:multi_cursor_quit_key            = '<Esc>'

" NerdTree
" map <C-t> :NERDTreeToggle<cr>

" SimplyFold folding
set foldmethod=indent
set foldlevel=99
nnoremap <C-f> za

" Tmux
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>


"
" GENERAL SETTINGS
"
syntax on

" netrw file tree 
"let g:netrw_banner=0
"let g:netrw_winsize=20
"let g:netrw_liststyle=3
"let g:netrw_localrmdir='rm -r'
"map <c-t> :Lexplore<cr>

" duplicates
inoremap """ ""<left>
inoremap ''' ''<left>
inoremap ((( ()<left>
inoremap [[[ []<left>
inoremap {{{ {}<left>
inoremap <<< <><left>


" split settings/mappings
map <leader>svp :vsp<cr><c-p>
map <leader>shp :sp<cr><c-p>
map <leader>sv :vsp<space>
map <leader>sh :sp<space>
set splitbelow
set splitright
nnoremap <leader>h <C-W><C-H>   " move left
nnoremap <leader>j <C-W><C-J>   " move down
nnoremap <leader>k <C-W><C-K>   " move up
nnoremap <leader>l <C-W><C-L>   " move right


" line numbers
noremap <leader>n :set invnumber<cr>
inoremap <leader>n <C-O>:set invnumber<cr>

au BufEnter * setlocal cursorline number
au BufLeave * setlocal nocursorline nonumber
au WinLeave * setlocal nocursorline nonumber

set showmatch           " matching brackets
set incsearch           " higlight search as you type
set pastetoggle=<leader>pt

" tab settings
set autoindent                    " Indent according to previous line.
set expandtab                     " Use spaces instead of tabs.
set softtabstop=4                 " Tab key indents by 4 spaces.
set shiftwidth=4                  " indents by 4 spaces.
set shiftround                    " indents to next multiple of 'shiftwidth'.
set backspace=indent,eol,start    " Make backspace work as you would expect.

imap <leader>t <home><tab><down>
nmap <leader>t <home>i<tab><down><esc>
imap <leader>tu <home><tab><up>
nmap <leader>tu <home>i<tab><up><esc>

imap <leader><s-t> <home><esc>dwi<down>
nmap <leader><s-t> <home>dw<down><esc>
imap <leader><s-t><s-u> <home><esc>dwi<up>
nmap <leader><s-t><s-u> <home>dw<up><esc>

" undo settings
set nobackup noswapfile nowritebackup            " disable backup/swap files
set undofile undodir=~/.vim/undo undolevels=9999 " undo options


" undo a comment
map <leader><s-c> <home><del><down>
map <leader><s-c><s-u> <home><del><up>


"
" Q settings
"
au BufNewFile,BufRead *.q
    \ imap <leader>c <home>/<down> |
    \ imap <leader>cu <home>/<up> |
    \ nmap <leader>c <home>i/<down><esc> |
    \ nmap <leader>cu <home>i/<up><esc>


"
" Python Settings
"
let python_highlight_all=1

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set autoindent |
    \ set fileformat=unix |
    \ imap <leader>c <home>#<down> |
    \ imap <leader>cu <home>#<up> |
    \ nmap <leader>c <home>i#<down><esc> |
    \ nmap <leader>cu <home>i#<up><esc>

au BufNewFile,BufRead *.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match Error /\s\+$/ " bad whitespace
